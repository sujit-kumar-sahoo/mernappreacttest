{"version":3,"sources":["component/Header.js","component/Footer.js","component/home/TotalPost.js","component/home/LatestPosts.js","component/home/BarChartMonth.js","component/home/Home.js","component/postlist/WithoutMetaDesc.js","component/postlist/TooLongMetaDesc.js","component/postlist/TooLongUrl.js","component/postlist/WithoutFeaturedImage.js","component/postlist/TooShortPosts.js","component/postlist/TooLongPosts.js","component/postlist/PostList.js","component/pagelist/PageList.js","component/Routing.js","index.js"],"names":["withRouter","props","console","log","className","href","id","to","Footer","TotalPost","state","totalposts","totalpages","totalauthors","totaltags","this","fetch","method","then","res","json","data","setState","meta","pagination","total","catch","err","Component","LatestPosts","renderLatestPosts","map","item","index","title","latestposts","posts","BarChartMonth","pdata","name","month","ResponsiveContainer","width","aspect","BarChart","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","Home","WithoutMetaDesc","renderWithoutMetaDesc","withoutmetadesc","TooLongMetaDesc","renderTooLongMetaDesc","meta_description","length","toolongmetadesc","TooLongUrl","renderTooLongUrl","url","toolongurl","WithoutFeaturedImage","renderWithoutFeaturedImage","withoutfeaturedimage","TooShortPosts","renderTooShortPosts","i","plaintext","split","tooshortposts","TooLongPosts","toolongposts","PostList","PageList","Routing","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3db33715.chunk.js","sourcesContent":["import React from 'react';\nimport {Link, withRouter} from 'react-router-dom'\n\nconst Header = (props) => {\n    console.log(\"header props>>>>\",props)\n    return(\n        <>\n            <nav className=\"navbar navbar-inverse\">\n                <div className=\"container-fluid\">\n                    <div className=\"navbar-header\">\n                        <button className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#developernav\">\n                            <span className=\"icon-bar\"></span>\n                            <span className=\"icon-bar\"></span>\n                            <span className=\"icon-bar\"></span>\n                        </button>\n                        <a className=\"navbar-brand\" href=\"#\">\n                            Sujit Test\n                        </a>\n                    </div>\n                    <div className=\"collapse navbar-collapse\" id=\"developernav\">\n                        <ul className=\"nav navbar-nav\">\n                            <li><Link to=\"/\">Dashboard</Link></li>\n                            <li><Link to=\"/postlist\">Posts List</Link></li>\n                            <li><Link to=\"/pagelist\">Pages List</Link></li>\n                        </ul>\n                        \n                    </div>\n                    \n                </div>\n            </nav>\n\n        </>\n    )\n}\n\nexport default withRouter(Header);","import React,{Fragment} from 'react';\n\nconst Footer = (props) => {\n    return(\n        <Fragment>\n            <hr/>\n            <center>\n                <h3>&copy; Footer</h3>\n            </center>\n        </Fragment>\n    )\n}\n\nexport default Footer;\n","import React, { Component } from 'react'\n\nconst PostsUrl = \"https://ghost-blog.ipxp.in/ghost/api/v3/content/posts/?key=8196190b08906dda0ebf6e6f5d&limit=all&authors=count.posts\";\nconst PagesUrl = \"https://ghost-blog.ipxp.in/ghost/api/v3/content/pages/?key=8196190b08906dda0ebf6e6f5d&limit=all&authors=count.posts\";\nconst TotalAuthorsUrl = \"https://ghost-blog.ipxp.in/ghost/api/v3/content/authors/?key=8196190b08906dda0ebf6e6f5d&limit=all&authors=count.posts\";\nconst TotalTagsUrl = \"https://ghost-blog.ipxp.in/ghost/api/v3/content/tags/?key=8196190b08906dda0ebf6e6f5d&limit=all&authors=count.posts\";\n\nclass TotalPost extends Component {\n    constructor(props){\n        super(props)\n        console.log(\"===========inside constructor================\")\n        this.state={\n            totalposts:'',\n            totalpages:'',\n            totalauthors:'',\n            totaltags:''\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"col-md-12\">                                \n                    <div className=\"form-group\">\n                        <div className=\"col-md-3 panel panel-success jumbotron\">\n                            <label> Total Posts </label>\n                            <h1>{this.state.totalposts}</h1>\n                        </div>\n                        <div className=\"col-md-3 panel panel-success jumbotron\">\n                            <label> Total Pages </label>\n                            <h1>{this.state.totalpages}</h1>\n                        </div>\n                        <div className=\"col-md-3 panel panel-success jumbotron\">\n                            <label> Total Authors </label>\n                            <h1>{this.state.totalauthors}</h1>\n                        </div>\n                        <div className=\"col-md-3 panel panel-success jumbotron\">\n                            <label> Total Tags </label>\n                            <h1>{this.state.totaltags}</h1>\n                        </div>\n                    </div>    \n                </div>\n            </div>\n        )\n    }\n\n    componentDidMount(){\n        console.log(\"===========inside componentDidMount===========\")\n        // we get the data and update the state\n        fetch(PostsUrl, {method:'GET'})\n        // return the promise\n        .then((res) => res.json())\n        // return the data\n        .then((data) => {\n            console.log(\"================aaa================\")\n            console.log(data)\n            console.log(\"================aaa================\")\n            // set the data in the state\n            this.setState({totalposts:data.meta.pagination.total})\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n\n        fetch(PagesUrl, {method:'GET'})\n        .then((res) => res.json())\n        .then((data) => {\n            this.setState({totalpages:data.meta.pagination.total})\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n\n        fetch(TotalAuthorsUrl, {method:'GET'})\n        .then((res) => res.json())\n        .then((data) => {\n            this.setState({totalauthors:data.meta.pagination.total})\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n\n        fetch(TotalTagsUrl, {method:'GET'})\n        .then((res) => res.json())\n        .then((data) => {\n            this.setState({totaltags:data.meta.pagination.total})\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n}\n\nexport default TotalPost\n","import React, { Component } from 'react'\n\nconst LatestPostsUrl = \"https://ghost-blog.ipxp.in/ghost/api/v3/content/posts/?key=8196190b08906dda0ebf6e6f5d&limit=5&order=published_at%20dec\";\n\nclass LatestPosts extends Component {\n    constructor(props){\n        super(props)\n        console.log(\"===========inside constructor================\")\n        this.state={\n            latestposts:''\n        }\n    }\n\n    renderLatestPosts = (data) => {\n        if(data){\n            return data.map((item, index)=> {\n                return(\n                    <p>\n                        {index+1}. {item.title}\n                    </p>\n                )\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n               {this.renderLatestPosts(this.state.latestposts)} \n            </div>\n        )\n    }\n\n    componentDidMount(){\n        console.log(\"===========inside componentDidMount===========\")\n        // we get the data and update the state\n        fetch(LatestPostsUrl, {method:'GET'})\n        // return the promise\n        .then((res) => res.json())\n        // return the data\n        .then((data) => {\n            console.log(\"================aaa================\")\n            console.log(data)\n            console.log(\"================aaa================\")\n            // set the data in the state\n            this.setState({latestposts:data.posts})\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n}\n\nexport default LatestPosts\n","import React, { Component } from 'react'\nimport { XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar } from 'recharts';\n\nclass BarChartMonth extends Component {\n    constructor(props){\n        super(props)\n        console.log(\"===========inside constructor================\")\n        this.state={\n            pdata:[\n                {\n                  name: 'Jan',\n                  month: 13\n                },\n                {\n                  name: 'Feb',\n                  month: 15\n                },\n                {\n                  name: 'Mar',\n                  month: 5\n                },\n                {\n                  name: 'Apr',\n                  month: 10\n                },\n                {\n                  name: 'May',\n                  month: 9\n                },\n                {\n                  name: 'June',\n                  month: 6\n                },\n                {\n                    name: 'July',\n                    month: 10\n                },\n                {\n                    name: 'Aug',\n                    month: 8\n                },\n                {\n                    name: 'Sep',\n                    month: 5\n                },\n                {\n                    name: 'Oct',\n                    month: 12\n                },\n                {\n                    name: 'Nov',\n                    month: 3\n                },\n                {\n                    name: 'Dec',\n                    month: 10\n                }\n              ]\n        }\n    }\n    render() {\n        return (\n            <>\n                <ResponsiveContainer width=\"100%\" aspect={3}>\n                    <BarChart\n                    width={500}\n                    height={300}\n                    data={this.state.pdata}\n                    margin={{\n                        top: 5,\n                        right: 30,\n                        left: 20,\n                        bottom: 5,\n                    }}\n                    >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"month\" fill=\"#8884d8\" />\n                    </BarChart>\n                </ResponsiveContainer>\n            </>\n        )\n    }\n}\n\nexport default BarChartMonth\n","import React from 'react';\n\nimport TotalPost from './TotalPost'\nimport LatestPosts from './LatestPosts'\nimport BarChartMonth from './BarChartMonth'\n\nconst Home = () => {\n    return(\n        <div className=\"panel panel-primary\">\n            <div className=\"panel-heading\">\n                Dashboard\n            </div>\n            <div className=\"panel-body\">\n                <div className=\"row\">\n                    <TotalPost/>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">                                \n                        <div className=\"form-group\">\n                            <div className=\"col-md-4 panel panel-success\">\n                                <label>Latest 5 Published posts </label>\n                                <LatestPosts/>\n                            </div>\n                            <div className=\"col-md-8 panel panel-success\">\n                                <label>Posts per month</label>\n                                <BarChartMonth/>\n                            </div>\n                        </div>\n                    \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","import React, { Component } from 'react'\n\nconst WithoutMetaDescUrl = \"https://ghost-blog.ipxp.in/ghost/api/v3/content/posts/?key=8196190b08906dda0ebf6e6f5d&filter=meta_description:null\";\n\nclass WithoutMetaDesc extends Component {\n    constructor(props){\n        super(props)\n        console.log(\"===========inside constructor================\")\n        this.state={\n            withoutmetadesc:''\n        }\n    }\n\n    renderWithoutMetaDesc = (data) => {\n        if(data){\n            return data.map((item, index)=> {\n                return(\n                    <p>\n                        {index+1}. {item.title}\n                    </p>\n                )\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n               {this.renderWithoutMetaDesc(this.state.withoutmetadesc)} \n            </div>\n        )\n    }\n\n    componentDidMount(){\n        console.log(\"===========inside componentDidMount===========\")\n        // we get the data and update the state\n        fetch(WithoutMetaDescUrl, {method:'GET'})\n        // return the promise\n        .then((res) => res.json())\n        // return the data\n        .then((data) => {\n            console.log(\"================aaa================\")\n            console.log(data)\n            console.log(\"================aaa================\")\n            // set the data in the state\n            this.setState({withoutmetadesc:data.posts})\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n}\n\nexport default WithoutMetaDesc\n","import React, { Component } from 'react'\n\nconst TooLongMetaDescUrl = \"https://ghost-blog.ipxp.in/ghost/api/v3/content/posts/?key=8196190b08906dda0ebf6e6f5d&filter=meta_description:-null\";\n\nclass TooLongMetaDesc extends Component {\n    constructor(props){\n        super(props)\n        console.log(\"===========inside constructor================\")\n        this.state={\n            toolongmetadesc:''\n        }\n    }\n\n    renderTooLongMetaDesc = (data) => {\n        if(data){\n            return data.map((item, index)=> {\n                if(item.meta_description.length>100){\n                    return(\n                        <p>\n                            {index+1}. {item.title}\n                        </p>\n                    )\n                }\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n               {this.renderTooLongMetaDesc(this.state.toolongmetadesc)} \n            </div>\n        )\n    }\n\n    componentDidMount(){\n        console.log(\"===========inside componentDidMount===========\")\n        // we get the data and update the state\n        fetch(TooLongMetaDescUrl, {method:'GET'})\n        // return the promise\n        .then((res) => res.json())\n        // return the data\n        .then((data) => {\n            console.log(\"================aaa================\")\n            console.log(data)\n            console.log(\"================aaa================\")\n            // set the data in the state\n            this.setState({toolongmetadesc:data.posts})\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n}\n\nexport default TooLongMetaDesc\n","import React, { Component } from 'react'\n\nconst TooLongUrlUrl = \"https://ghost-blog.ipxp.in/ghost/api/v3/content/posts/?key=8196190b08906dda0ebf6e6f5d&limit=all\";\n\nclass TooLongUrl extends Component {\n    constructor(props){\n        super(props)\n        console.log(\"===========inside constructor================\")\n        this.state={\n            toolongurl:''\n        }\n    }\n\n    renderTooLongUrl = (data) => {\n        if(data){\n            return data.map((item, index)=> {\n                if(item.url.length>100){\n                    return(\n                        <p>\n                            {index+1}. {item.title}\n                        </p>\n                    )\n                }\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n               {this.renderTooLongUrl(this.state.toolongurl)} \n            </div>\n        )\n    }\n\n    componentDidMount(){\n        console.log(\"===========inside componentDidMount===========\")\n        // we get the data and update the state\n        fetch(TooLongUrlUrl, {method:'GET'})\n        // return the promise\n        .then((res) => res.json())\n        // return the data\n        .then((data) => {\n            console.log(\"================aaa================\")\n            console.log(data)\n            console.log(\"================aaa================\")\n            // set the data in the state\n            this.setState({toolongurl:data.posts})\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n}\n\nexport default TooLongUrl\n","import React, { Component } from 'react'\n\nconst WithoutFeaturedImageUrl = \"https://ghost-blog.ipxp.in/ghost/api/v3/content/posts/?key=8196190b08906dda0ebf6e6f5d&filter=featured:false\";\n\nexport class WithoutFeaturedImage extends Component {\n    constructor(props){\n        super(props)\n        console.log(\"===========inside constructor================\")\n        this.state={\n            withoutfeaturedimage:''\n        }\n    }\n\n    renderWithoutFeaturedImage = (data) => {\n        if(data){\n            return data.map((item, index)=> {\n                return(\n                    <p>\n                        {index+1}. {item.title}\n                    </p>\n                )\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n               {this.renderWithoutFeaturedImage(this.state.withoutfeaturedimage)} \n            </div>\n        )\n    }\n\n    componentDidMount(){\n        console.log(\"===========inside componentDidMount===========\")\n        // we get the data and update the state\n        fetch(WithoutFeaturedImageUrl, {method:'GET'})\n        // return the promise\n        .then((res) => res.json())\n        // return the data\n        .then((data) => {\n            console.log(\"================aaa================\")\n            console.log(data)\n            console.log(\"================aaa================\")\n            // set the data in the state\n            this.setState({withoutfeaturedimage:data.posts})\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n}\n\nexport default WithoutFeaturedImage\n","import React, { Component } from 'react'\n\nconst TooShortPostsUrl = \"https://ghost-blog.ipxp.in/ghost/api/v3/content/posts/?key=8196190b08906dda0ebf6e6f5d&formats=html,plaintext\";\n\nclass TooShortPosts extends Component {\n    constructor(props){\n        super(props)\n        console.log(\"===========inside constructor================\")\n        this.state={\n            tooshortposts:''\n        }\n    }\n\n    renderTooShortPosts = (data) => {\n        if(data){\n            let i = 1\n            return data.map((item, index)=> {\n                if(item.plaintext.split(' ').length<250){\n                    return(\n                        <p>\n                            {i++}. {item.title}\n                        </p>\n                    )\n                }\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n               {this.renderTooShortPosts(this.state.tooshortposts)} \n            </div>\n        )\n    }\n\n    componentDidMount(){\n        console.log(\"===========inside componentDidMount===========\")\n        // we get the data and update the state\n        fetch(TooShortPostsUrl, {method:'GET'})\n        // return the promise\n        .then((res) => res.json())\n        // return the data\n        .then((data) => {\n            console.log(\"================aaa================\")\n            console.log(data)\n            console.log(\"================aaa================\")\n            // set the data in the state\n            this.setState({tooshortposts:data.posts})\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n}\n\nexport default TooShortPosts\n","import React, { Component } from 'react'\n\nconst TooLongPostsUrl = \"https://ghost-blog.ipxp.in/ghost/api/v3/content/posts/?key=8196190b08906dda0ebf6e6f5d&formats=html,plaintext\";\n\nexport class TooLongPosts extends Component {\n    constructor(props){\n        super(props)\n        console.log(\"===========inside constructor================\")\n        this.state={\n            toolongposts:''\n        }\n    }\n\n    renderTooShortPosts = (data) => {\n        if(data){\n            let i = 1\n            return data.map((item, index)=> {\n                if(item.plaintext.split(' ').length>1500){\n                    return(\n                        <p>\n                            {i++}. {item.title}\n                        </p>\n                    )\n                }\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n               {this.renderTooShortPosts(this.state.toolongposts)} \n            </div>\n        )\n    }\n\n    componentDidMount(){\n        console.log(\"===========inside componentDidMount===========\")\n        // we get the data and update the state\n        fetch(TooLongPostsUrl, {method:'GET'})\n        // return the promise\n        .then((res) => res.json())\n        // return the data\n        .then((data) => {\n            console.log(\"================aaa================\")\n            console.log(data)\n            console.log(\"================aaa================\")\n            // set the data in the state\n            this.setState({toolongposts:data.posts})\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n}\n\nexport default TooLongPosts\n","import React from 'react';\nimport WithoutMetaDesc from './WithoutMetaDesc';\nimport TooLongMetaDesc from './TooLongMetaDesc';\nimport TooLongUrl from './TooLongUrl'\nimport WithoutFeaturedImage from './WithoutFeaturedImage'\nimport TooShortPosts from './TooShortPosts'\nimport TooLongPosts from './TooLongPosts'\n\n\n\nconst PostList = (props) => {\n    \n    return(\n        <div className=\"panel panel-success\">\n            <div className=\"panel-heading\">\n                Post List\n            </div>\n            <div className=\"panel-body\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">                                \n                        <div className=\"form-group\">\n                            <div className=\"col-md-4 panel panel-success\">\n                                <label> Without Meta Description</label>\n                                <WithoutMetaDesc/>\n                            </div>\n                            <div className=\"col-md-4 panel panel-success\">\n                                <label>Too long Meta Description</label>\n                                <TooLongMetaDesc/>\n                            </div>\n                            <div className=\"col-md-4 panel panel-success\">\n                                <label>Too long URL, more than 100 chars</label>\n                                <TooLongUrl/>\n                            </div>\n                        </div>\n                    \n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">                                \n                        <div className=\"form-group\">\n                            <div className=\"col-md-4 panel panel-success\">\n                                <label>List of Posts without Featured Image</label>\n                                <WithoutFeaturedImage/>\n                            </div>\n                            <div className=\"col-md-4 panel panel-success\">\n                                <label>Too Short Posts, Below 250 words</label>\n                                <TooShortPosts/>\n                            </div>\n                            <div className=\"col-md-4 panel panel-success\">\n                                <label>Too Long Posts, More than 1500 words</label>\n                                <TooLongPosts/>\n                            </div>\n                        </div>\n                    \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PostList;","import React from 'react';\n\nconst PageList = () => {\n    return(\n        <div className=\"panel panel-danger\">\n            <div className=\"panel-heading\">\n                Page List\n            </div>\n            <div className=\"panel-body\">\n                <div className=\"jumbotron\">\n                    <p>\n                        PageList\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PageList;","import React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Home from './home/Home';\nimport PostList from './postlist/PostList';\nimport PageList from './pagelist/PageList';\n\n\nconst Routing = () => {\n    return(\n        <BrowserRouter>\n            <Header/>\n            <Route exact path=\"/\" component={Home}/>\n            <Route exact path=\"/postlist\" component={PostList}/>\n            <Route path=\"/pagelist\" component={PageList}/>\n            <Footer/>\n        </BrowserRouter>\n    )\n}\n\nexport default Routing;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routing from './component/Routing'\n\nReactDOM.render(<Routing/>, document.getElementById('root'))\n\n\n"],"sourceRoot":""}